{
    "project": {
        "name": "poly-decomp.js",
        "description": "2D polygon decomposition",
        "version": "0.1.0"
    },
    "files": {
        "src/Line.js": {
            "name": "src/Line.js",
            "modules": {},
            "classes": {
                "Line": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Point.js": {
            "name": "src/Point.js",
            "modules": {},
            "classes": {
                "Point": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Polygon.js": {
            "name": "src/Polygon.js",
            "modules": {},
            "classes": {
                "Polygon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Scalar.js": {
            "name": "src/Scalar.js",
            "modules": {},
            "classes": {
                "Scalar": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {},
    "classes": {
        "Line": {
            "name": "Line",
            "shortname": "Line",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/Line.js",
            "line": 5,
            "description": "Container for line-related functions"
        },
        "Point": {
            "name": "Point",
            "shortname": "Point",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/Point.js",
            "line": 3,
            "description": "Point related functions"
        },
        "Polygon": {
            "name": "Polygon",
            "shortname": "Polygon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/Polygon.js",
            "line": 7,
            "description": "Polygon class.",
            "is_constructor": 1
        },
        "Scalar": {
            "name": "Scalar",
            "shortname": "Scalar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "file": "src/Scalar.js",
            "line": 3,
            "description": "Scalar functions"
        }
    },
    "classitems": [
        {
            "file": "src/Line.js",
            "line": 11,
            "description": "Compute the intersection between two lines.",
            "static": 1,
            "itemtype": "method",
            "name": "lineInt",
            "params": [
                {
                    "name": "l1",
                    "description": "Line vector 1",
                    "type": "Array"
                },
                {
                    "name": "l2",
                    "description": "Line vector 2",
                    "type": "Array"
                },
                {
                    "name": "precision",
                    "description": "Precision to use when checking if the lines are parallel",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "The intersection point.",
                "type": "Array"
            },
            "class": "Line"
        },
        {
            "file": "src/Line.js",
            "line": 38,
            "description": "Checks if two line segments intersects.",
            "itemtype": "method",
            "name": "segmentsIntersect",
            "params": [
                {
                    "name": "p1",
                    "description": "The start vertex of the first line segment.",
                    "type": "Array"
                },
                {
                    "name": "p2",
                    "description": "The end vertex of the first line segment.",
                    "type": "Array"
                },
                {
                    "name": "q1",
                    "description": "The start vertex of the second line segment.",
                    "type": "Array"
                },
                {
                    "name": "q2",
                    "description": "The end vertex of the second line segment.",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "True if the two line segments intersect",
                "type": "Boolean"
            },
            "class": "Line"
        },
        {
            "file": "src/Point.js",
            "line": 9,
            "description": "Get the area of a triangle spanned by the three given points. Note that the area will be negative if the points are not given in counter-clockwise order.",
            "static": 1,
            "itemtype": "method",
            "name": "area",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Number"
            },
            "class": "Point"
        },
        {
            "file": "src/Point.js",
            "line": 41,
            "description": "Check if three points are collinear",
            "itemtype": "method",
            "name": "collinear",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "c",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "thresholdAngle",
                    "description": "Threshold angle to use when comparing the vectors. The function will return true if the angle between the resulting vectors is less than this value. Use zero for max precision.",
                    "type": "Number",
                    "optional": true,
                    "optdefault": "0"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Point"
        },
        {
            "file": "src/Polygon.js",
            "line": 14,
            "description": "Vertices that this polygon consists of. An array of array of numbers, example: [[0,0],[1,0],..]",
            "itemtype": "property",
            "name": "vertices",
            "type": "{Array}",
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 22,
            "description": "Get a vertex at position i. It does not matter if i is out of bounds, this function will just cycle.",
            "itemtype": "method",
            "name": "at",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 34,
            "description": "Get first vertex",
            "itemtype": "method",
            "name": "first",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 43,
            "description": "Get last vertex",
            "itemtype": "method",
            "name": "last",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 52,
            "description": "Clear the polygon data",
            "itemtype": "method",
            "name": "clear",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 61,
            "description": "Append points \"from\" to \"to\"-1 from an other polygon \"poly\" onto this one.",
            "itemtype": "method",
            "name": "append",
            "params": [
                {
                    "name": "poly",
                    "description": "The polygon to get points from.",
                    "type": "Polygon"
                },
                {
                    "name": "from",
                    "description": "The vertex index in \"poly\".",
                    "type": "Number"
                },
                {
                    "name": "to",
                    "description": "The end vertex index in \"poly\". Note that this vertex is NOT included when appending.",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 82,
            "description": "Make sure that the polygon vertices are ordered counter-clockwise.",
            "itemtype": "method",
            "name": "makeCCW",
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 103,
            "description": "Reverse the vertices in the polygon",
            "itemtype": "method",
            "name": "reverse",
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 115,
            "description": "Check if a point in the polygon is a reflex point",
            "itemtype": "method",
            "name": "isReflex",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 128,
            "description": "Check if two vertices in the polygon can see each other",
            "itemtype": "method",
            "name": "canSee",
            "params": [
                {
                    "name": "a",
                    "description": "Vertex index 1",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "Vertex index 2",
                    "type": "Number"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 160,
            "description": "Copy the polygon from vertex i to vertex j.",
            "itemtype": "method",
            "name": "copy",
            "params": [
                {
                    "name": "i",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "j",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "targetPoly",
                    "description": "Optional target polygon to save in.",
                    "type": "Polygon",
                    "optional": true
                }
            ],
            "return": {
                "description": "The resulting copy.",
                "type": "Polygon"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 190,
            "description": "Decomposes the polygon into convex pieces. Returns a list of edges [[p1,p2],[p2,p3],...] that cuts the polygon.\nNote that this algorithm has complexity O(N^4) and will be very slow for polygons with many vertices.",
            "itemtype": "method",
            "name": "getCutEdges",
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 223,
            "description": "Decomposes the polygon into one or more convex sub-Polygons.",
            "itemtype": "method",
            "name": "decomp",
            "return": {
                "description": "An array or Polygon objects.",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 236,
            "description": "Slices the polygon given one or more cut edges. If given one, this function will return two polygons (false on failure). If many, an array of polygons.",
            "itemtype": "method",
            "name": "slice",
            "params": [
                {
                    "name": "cutEdges",
                    "description": "A list of edges, as returned by .getCutEdges()",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 280,
            "description": "Checks that the line segments of this polygon do not intersect each other.",
            "itemtype": "method",
            "name": "isSimple",
            "params": [
                {
                    "name": "path",
                    "description": "An array of vertices e.g. [[0,0],[0,1],...]",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "todo": [
                "Should it check all segments with all others?"
            ],
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 324,
            "description": "Quickly decompose the Polygon into convex sub-polygons.",
            "itemtype": "method",
            "name": "quickDecomp",
            "params": [
                {
                    "name": "result",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "reflexVertices",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "steinerPoints",
                    "description": "",
                    "type": "Array",
                    "optional": true
                },
                {
                    "name": "delta",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "maxlevel",
                    "description": "",
                    "type": "Number",
                    "optional": true
                },
                {
                    "name": "level",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Array"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Polygon.js",
            "line": 477,
            "description": "Remove collinear points in the polygon.",
            "itemtype": "method",
            "name": "removeCollinearPoints",
            "params": [
                {
                    "name": "precision",
                    "description": "The threshold angle to use when determining whether two edges are collinear. Use zero for finest precision.",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "The number of points removed",
                "type": "Number"
            },
            "class": "Polygon"
        },
        {
            "file": "src/Scalar.js",
            "line": 9,
            "description": "Check if two scalars are equal",
            "static": 1,
            "itemtype": "method",
            "name": "eq",
            "params": [
                {
                    "name": "a",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "b",
                    "description": "",
                    "type": "Number"
                },
                {
                    "name": "precision",
                    "description": "",
                    "type": "Number",
                    "optional": true
                }
            ],
            "return": {
                "description": "",
                "type": "Boolean"
            },
            "class": "Scalar"
        }
    ],
    "warnings": []
}